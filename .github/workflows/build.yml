name: Build and Attest Plugin

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: '20'
      plugin-name:
        description: 'Name of the plugin (used for tarball naming)'
        required: true
        type: string
      build-command:
        description: 'Command to run esbuild'
        required: false
        type: string
        default: 'npm run build'
      source-directory:
        description: 'Directory containing the built files (relative to working-directory)'
        required: false
        type: string
        default: 'dist'
      working-directory:
        description: 'Working directory containing package.json and build files'
        required: false
        type: string
        default: '.'
    outputs:
      artifact-name:
        description: 'Name of the built artifact'
        value: ${{ jobs.build-and-attest.outputs.artifact-name }}
      artifact-digest:
        description: 'SHA256 digest of the artifact'
        value: ${{ jobs.build-and-attest.outputs.artifact-digest }}
      sbom-attestation-url:
        description: 'URL of the SBOM attestation'
        value: ${{ jobs.build-and-attest.outputs.sbom-attestation-url }}
      provenance-attestation-url:
        description: 'URL of the provenance attestation'
        value: ${{ jobs.build-and-attest.outputs.provenance-attestation-url }}

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

jobs:
  build-and-attest:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.package.outputs.artifact-name }}
      artifact-digest: ${{ steps.package.outputs.artifact-digest }}
      sbom-attestation-url: ${{ steps.attest-sbom.outputs.attestation-url }}
      provenance-attestation-url: ${{ steps.attest-provenance.outputs.attestation-url}}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "20"
          cache: npm
          cache-dependency-path: |
            ${{ inputs.working-directory }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ inputs.working-directory }}
        run: npm ci

      - name: Build plugin with esbuild
        working-directory: ${{ inputs.working-directory }}
        run: ${{ inputs.build-command }}

      - name: Generate SBOM
        working-directory: ${{ inputs.working-directory }}
        run: |
          npm sbom \
          --sbom-format spdx \
          --omit dev \
          --sbom-type application \
          --package-lock-only > ${{ inputs.source-directory }}/sbom.spdx.json

      - name: Verify required files exist
        id: verify-files
        run: |
          SOURCE_PATH="${{github.workspace}}/${{ inputs.working-directory }}/${{ inputs.source-directory }}"
          echo "Checking for required files in $SOURCE_PATH..."
          if [ ! -f "$SOURCE_PATH/main.js" ]; then
            echo "Error: main.js not found in $SOURCE_PATH"
            exit 1
          fi
          if [ ! -f "$SOURCE_PATH/styles.css" ]; then
            echo "Error: styles.css not found in $SOURCE_PATH"
            exit 1
          fi
          if [ ! -f "$SOURCE_PATH/manifest.json" ]; then
            echo "Error: manifest.json not found in $SOURCE_PATH"
            exit 1
          fi
          if [ ! -f "$SOURCE_PATH/sbom.spdx.json" ]; then
            echo "Error: sbom.spdx.json not found in $SOURCE_PATH"
            exit 1
          fi
          echo "All required files found!"
          echo "source-path=$SOURCE_PATH" >> $GITHUB_OUTPUT

      - name: Package plugin
        id: package
        run: |
          ARTIFACT_NAME="${{ inputs.plugin-name }}-$(date +%Y%m%d-%H%M%S).tar.gz"
          echo "Creating tarball: $ARTIFACT_NAME"
          
          # Create tarball with the three required files
          cd "${{ steps.verify-files.outputs.source-path }}"
          tar -czf "$GITHUB_WORKSPACE/$ARTIFACT_NAME" main.js styles.css manifest.json
          cd "$GITHUB_WORKSPACE"

          # Calculate digest
          DIGEST=$(sha256sum "$ARTIFACT_NAME" | cut -d' ' -f1)
          
          echo "artifact-name=$ARTIFACT_NAME" >> $GITHUB_OUTPUT
          echo "artifact-digest=$DIGEST" >> $GITHUB_OUTPUT
          
          echo "Built artifact: $ARTIFACT_NAME (SHA256: $DIGEST)"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.package.outputs.artifact-name }}
          path: ${{ steps.package.outputs.artifact-name }}
          retention-days: 30
      - uses: oras-project/setup-oras@v1
      - run: |
          oras login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} ghcr.io
          oras push ghcr.io/${{ github.repository }}/${{ inputs.plugin-name }}:${{ steps.package.outputs.artifact-name }} \
            --artifact-type application/tar+gzip \
            --subject "sha256:${{ steps.package.outputs.artifact-digest }}" \
            ${{ steps.package.outputs.artifact-name }}

      - name: Attest SBOM
        id: attest-sbom
        uses: actions/attest-sbom@v3
        with:
          sbom-path: ${{ steps.verify-files.outputs.source-path }}/sbom.spdx.json
          push-to-registry: true
          subject-digest: sha256:${{ steps.package.outputs.artifact-digest }}
          subject-name: ghcr.io/${{ github.repository }}/${{ inputs.plugin-name }}:${{ steps.package.outputs.artifact-name }}

      - name: Attest build provenance
        id: attest-provenance
        uses: actions/attest-build-provenance@v3
        with:
          push-to-registry: true
          subject-digest: sha256:${{ steps.package.outputs.artifact-digest }}
          subject-name: ghcr.io/${{ github.repository }}/${{ inputs.plugin-name }}:${{ steps.package.outputs.artifact-name }}
